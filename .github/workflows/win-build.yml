name: Build Sigil on Windows

on: [push]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release
  DOWNLOADQT: https://github.com/dougmassay/win-qtwebkit-5.212/releases/download/v5.212-1/MyQtx64_5.12.9_VS2017_WE.7z
  GDRIVE: https://github.com/dougmassay/win-qtwebkit-5.212/releases/download/v5.212-1/gdrive-windows-x64.exe
  QT: C:\MyQtx64_WE\Qt5.12.9
  INNO: C:\Program Files (x86)\Inno Setup 6
  CMAKE64BIT: -DWIN_INSTALLER_USE_64BIT_CRT=1
  PYTHON: C:\Users\runneradmin\AppData\Roaming\Python\Python38

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally
    # well on Windows or Mac.  You can convert this to a matrix build if you need
    # cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.8
      uses: actions/setup-python@v2
      with:
        python-version: 3.8
#    - uses: actions/cache@mainv2
#      with:
#        path: [a, b]
#        key: ${{ runner.os }}-pip-test-build
#        restore-keys: |
#            ${{ runner.os }}-pip-test-build
      
    - name: Install dependencies
      shell: cmd
      run: |
        where python
        where pip
        where curl
        where iscc
        c:
        cd \
        echo %CD%
        curl -L -o webkit.7z "%DOWNLOADQT%"
        7z x webkit.7z -y
        dir
        set PATH=%PYTHON%;%PYTHON%\Scripts;%QT%\bin;%PATH%
        echo %PATH%
        python -m pip install --upgrade pip
        pip install six==1.15.0
        pip install html5lib==1.1
        pip install regex==2020.6.8
        pip install css-parser==1.0.4
        pip install cssselect==1.1.0
        pip install urllib3==1.25.9
        pip install certifi==2020.6.20
        pip install dulwich==0.20.5 --global-option="--pure"
        pip install chardet==3.0.4
        pip install pillow==7.1.2
        pip install PyQt5==5.12.3 PyQt5-sip==4.19.19
        pip install lxml==4.5.1
    - name: Create Build Environment
      shell: cmd
      run: |
        set PATH=%QT%\bin;%PATH%
        mkdir ${{runner.workspace}}\build
        cd ${{runner.workspace}}\build
        curl -L -o gdrive.exe "%GDRIVE%"
        gdrive version
        echo %PATH%
        where qmake
        python --version
        
    - name: Configure CMake
      shell: cmd
      working-directory: ${{runner.workspace}}\build
      run: |
        call "C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Auxiliary\Build\vcvarsall.bat" x64 -vcvars_ver=14.1
        echo %PATH%
        cmake %GITHUB_WORKSPACE% ^
        -G "NMake Makefiles" ^
        -DCMAKE_BUILD_TYPE=$BUILD_TYPE ^
        -DPYTHON_LIBRARY=%PYTHON%\libs\python38.lib ^
        -DPYTHON_INCLUDE_DIR=%PYTHON%\include ^
        -DPYTHON_EXECUTABLE=%PYTHON%\python.exe ^
        -DUSE_ALT_ICONS=1 ^
        -DQt5_DIR=$QT\lib\cmake\Qt5 ^
        %CMAKE64BIT%

    - name: Build
      shell: cmd
      working-directory: ${{runner.workspace}}]\build
      # Execute the build.  You can specify a specific target with "--target <NAME>"
      run: nmake
